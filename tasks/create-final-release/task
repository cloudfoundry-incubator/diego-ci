#!/bin/bash

set -e -x -u

echo "----- Copy private blobstore credentials into diego-release"

cat > $PWD/diego-release/config/private.yml <<EOF
---
blobstore:
  s3:
    # For diego-release-blobs s3 bucket
    secret_access_key: $secret_access_key
    access_key_id: $access_key_id
  provider: s3
  options:
    secret_access_key: $secret_access_key
    access_key_id: $access_key_id
EOF

FINAL_RELEASE_VERSION=$(cat version/number)

pushd diego-release
  RELEASE_YML=$PWD/releases/diego/diego-${FINAL_RELEASE_VERSION}.yml
  RELEASE_TGZ=$PWD/releases/diego/diego-${FINAL_RELEASE_VERSION}.tgz

  # idempotently create tarball in case later parts of shipit fail
  if [ -e "${RELEASE_YML}" ]; then
    echo "----- Release already created; making tarball..."
    bosh -n create-release --tarball ${RELEASE_TGZ} ${RELEASE_YML}
  else
    echo "----- Set git identity"
    git config user.email "cf-diego+github@pivotal.io"
    git config user.name "CI (Automated)"

    echo "----- Create final release"
    bosh -n create-release --final --version $FINAL_RELEASE_VERSION --tarball $RELEASE_TGZ

    echo "----- Adding master cloned release as remote"
    git remote add local-diego-release-master ../diego-release-master
    git fetch local-diego-release-master
    git merge --no-edit local-diego-release-master/master

    echo "----- Update master and develop branches on origin"
    git add -A
    git commit -m "Create final release ${FINAL_RELEASE_VERSION}"

    echo "----- DEBUG: show the commit we just created"
    git --no-pager show HEAD
  fi

  # make tarball easier to reach by upstream things
  mv $RELEASE_TGZ ../final-release/diego-$FINAL_RELEASE_VERSION.tgz
popd

cp -a diego-release final-release/
